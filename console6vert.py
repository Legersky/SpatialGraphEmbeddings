from algRealEmbeddings import *
from graphEmbedding import *

v1, v2, v3, v4, v5, v6 =[
                        [0, 1.50000000000000, 0],
                        [0, 1.00000000000000, 0],
                        [-0.215583789828996, -0.994162101710040, 0.621965547009129],
                        [-1.68361243153425, 1.34617354563865, 0.166201392119758],
                        [0.700033202689246, 0.110676360238974, 3.34383891004353],
                        [1.00000000000000, 1.10000000000000, 0]
                         ]



def dist( u, v):
    return float(np.sqrt( (u[0]-v[0])**2 + (u[1]-v[1])**2 + (u[2]-v[2])**2))
    
lengths = {(1, 2) : dist(v1,v2), 
            (2, 3) : dist(v2,v3), 
            (3, 4) : dist(v3,v4), 
            (4, 5) : dist(v4,v5), 
            (5, 6) : dist(v5,v6), 
            (1, 6) : dist(v1,v6), 
            (1, 3) : dist(v1,v3), 
            (2, 4) : dist(v2,v4), 
            (3, 5) : dist(v3,v5), 
            (4, 6) : dist(v4,v6), 
            (1, 5) : dist(v1,v5), 
            (2, 6) : dist(v2,v6)}


alg = AlgRealEmbeddings('Max6vertices', name='6vert')
#alg.findMoreEmbeddings(lengths, onlyOne=False)

lengths_16 = {(1, 2): 1.192323262395329,
             (1, 3): 2.57956626232203,
             (1, 5): 3.688024581966244,
             (1, 6): 1.077032961426901,
             (2, 3): 2.872251735894357,
             (2, 4): 3.05387943129613,
             (2, 6): 0.8856970278422128,
             (3, 4): 2.800000000000002,
             (3, 5): 3.076949318462398,
             (4, 5): 4.16000000000000,
             (4, 6): 2.70000000000000,
             (5, 6): 3.50000000000000}

alg.findAllMaximumByOneIteration(lengths_16)


















