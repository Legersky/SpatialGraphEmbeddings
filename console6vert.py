from algRealEmbeddings import *
from graphEmbedding import *

v1, v2, v3, v4, v5, v6 =[
                        [0, 1.50000000000000, 0],
                        [0, 1.00000000000000, 0],
                        [-0.215583789828996, -0.994162101710040, 0.621965547009129],
                        [-1.68361243153425, 1.34617354563865, 0.166201392119758],
                        [0.700033202689246, 0.110676360238974, 3.34383891004353],
                        [1.00000000000000, 1.10000000000000, 0]
                         ]



def dist( u, v):
    return float(np.sqrt( (u[0]-v[0])**2 + (u[1]-v[1])**2 + (u[2]-v[2])**2))
    
lengths = {(1, 2) : dist(v1,v2), 
            (2, 3) : dist(v2,v3), 
            (3, 4) : dist(v3,v4), 
            (4, 5) : dist(v4,v5), 
            (5, 6) : dist(v5,v6), 
            (1, 6) : dist(v1,v6), 
            (1, 3) : dist(v1,v3), 
            (2, 4) : dist(v2,v4), 
            (3, 5) : dist(v3,v5), 
            (4, 6) : dist(v4,v6), 
            (1, 5) : dist(v1,v5), 
            (2, 6) : dist(v2,v6)}


alg = AlgRealEmbeddings('Max6vertices', name='6vert')
#alg.findMoreEmbeddings(lengths, onlyOne=False)

#lengths_1 = {(1, 2): 97.5046102374000,
# (1, 3): 229.076811504000,
# (1, 5): 96.5331304585000,
# (1, 6): 24.2105017241000,
# (2, 3): 140.477873389000,
# (2, 4): 92.7986610054000,
# (2, 6): 119.090164173000,
# (3, 4): 226.432084746000,
# (3, 5): 226.885963284000,
# (4, 5): 12.6618257913000,
# (4, 6): 31.4674379163000,
# (5, 6): 99.4754942900000}
#
##alg.findAllMaximumByOneIteration(lengths_16)
#
#alg.runSamplingPhiTheta(lengths_1, [3, 5, 1, 4, 2])

lengths2 = {(1, 2): 54.6739864771000,
 (1, 3): 11.0977700264000,# (1, 3): 77.2537579489568,
 (1, 5): 20.7598933171000,
 (1, 6): 17.4076482981000,
 (2, 3): 46.1725065153000,# (2, 3): 46.17250651529997,
 (2, 4): 44.1248438916000,
 (2, 6): 39.5200110624000,
 (3, 4): 5.13105980389000,# (3, 4): 5.131059803889944,
 (3, 5): 19.2152835430000,# (3, 5): 71.4978703768780,
 (4, 5): 18.9842375767000,
 (4, 6): 7.22229420530000,
 (5, 6): 21.4701148369000}
#[clusters, centers, res_lengths, res_infos, maximum] = alg.sampleToGetMoreEmbd(lengths2, [3, 1, 2, 5, 4])
#
#print clusters
#print centers
#print res_lengths
#print res_infos
#print maximum


L = {(1, 2): 54.6739864771, (2, 6): 39.5200110624, (4, 6): 7.2222942053, (5, 6): 21.4701148369, (1, 5): 20.7598933171, (1, 3): 9.761402884529375, (1, 6): 17.4076482981, (4, 5): 18.9842375767, (2, 3): 47.13910185335508, (3, 4): 6.0255257671065863, (2, 4): 44.1248438916, (3, 5): 19.068760219449228}
G = GraphEmbedding(L, 'Max6vertices')
print len(G.findEmbeddings()['real'])
#print [G.getLengths()[e] for e in [(3, 5), (1, 3), (2, 3)]]
#phi,  theta = G.getPhiTheta([3, 1, 2, 5, 4])
#print phi,  theta
#G.setPhiTheta([3, 1, 2, 5, 4], phi,  theta)
#print [G.getLengths()[e] for e in [(3, 5), (1, 3), (2, 3)]]
#print G.getPhiTheta([3, 1, 2, 5, 4])




