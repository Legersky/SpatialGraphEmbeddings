from algRealEmbeddings import *

#lengths_6 = {(1, 2): 6.099818467740645, (2, 6): 5.389464763477484, (4, 6): 17.458194593630203, (5, 6): 43.13742360468269, (1, 5): 43.087536851112226,
#             (1, 3): 24.493501066561528, (2, 3): 27.809668047116325, (4, 5): 39.146617635281345, (1, 6): 4.28533300202685, (3, 4): 17.820328276592008, 
#             (2, 4): 20.464011169470602, (3, 5): 38.09546297521888}
lengths_6 = {(1, 2): 11.354946415291149, (2, 6): 11.353013516443028, (4, 6): 5.094142374709439, (5, 6): 1.8510414310714904, (1, 5): 2.543527748541563, 
             (1, 3): 4.2665790865565736, (2, 3): 11.769187387789637, (4, 5): 5.27789299661366, (1, 6): 2.6576886060756366, (3, 4): 5.840001500475454, 
             (2, 4): 13.034587492508738, (3, 5): 3.9287979443912167}

lengths_6 = {(1, 2): 5.0361656614710295, (2, 6): 4.626030108023384, (4, 6): 9.384424073672346, (5, 6): 20.503172372439959, (1, 5): 19.650601731001316, 
             (1, 3): 12.158961347343343, (2, 3): 12.28221029430773, (4, 5): 18.628359914101917, (1, 6): 5.8509767512401964, (3, 4): 13.710902128699601, 
             (2, 4): 9.092957485183746, (3, 5): 26.032331977897815}

G = GraphEmbedding(lengths_6, 'Max6vertices')
v1, v2, v3, v7, v4, v5 = G.getEmbedding()

def dist( u, v):
    return float(np.sqrt( (u[0]-v[0])**2 + (u[1]-v[1])**2 + (u[2]-v[2])**2))

v6 = [0, 0, 0]

lengths = {(1, 2) : dist(v1,v2),
           (1, 3) : dist(v1,v3),
           (1, 4) : dist(v1,v4),
           (1, 5) : dist(v1,v5),
           (1, 6) : dist(v1,v6),
           (7, 2) : dist(v7,v2),
           (7, 3) : dist(v7,v3),
           (7, 4) : dist(v7,v4),
           (7, 5) : dist(v7,v5),
           (7, 6) : dist(v7,v6),
            (2, 3) : dist(v2,v3), 
            (3, 4) : dist(v3,v4), 
            (4, 5) : dist(v4,v5), 
            (5, 6) : dist(v5,v6), 
            (2, 6) : dist(v2,v6), 
            }

all_comb = [[2, 3, 1, 7, 6], [3, 7, 2, 4, 1], [5, 6, 1, 7, 4], [6, 1, 5, 2, 7], [3, 4, 1, 7, 2], [6, 7, 5, 2, 1], [4, 3, 1, 7, 5],
                                  [5, 1, 4, 6, 7], [2, 6, 1, 7, 3], [5, 7, 4, 6, 1], [3, 2, 1, 7, 4], [4, 1, 3, 5, 7], [6, 5, 1, 7, 2], [2, 7, 6, 3, 1],
                                  [3, 1, 2, 4, 7], [5, 4, 1, 7, 6], [4, 7, 3, 5, 1], [6, 2, 1, 7, 5], [2, 1, 6, 3, 7], [4, 5, 1, 7, 3]]
alg = AlgRealEmbeddings('Max7vertices', name='7vert_from_6vert')
#alg.findMoreEmbeddings_tree(lengths,  combinations=[comb for comb in all_comb if comb[0]==6])
alg.findMoreEmbeddings(lengths, combinations=[comb for comb in all_comb if comb[0]==6], required_num=32)
