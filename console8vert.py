from algRealEmbeddings import *
#import time
from random import uniform
import copy


#v1 = [uniform(a, b), uniform(a, b), uniform(a, b)]
#v7 = [uniform(a, b), uniform(a, b), uniform(a, b)]
#
#v2 = [1.0+uniform(a, b), uniform(a, b), uniform(a, b)]
#v5 = [1.0+uniform(a, b), uniform(a, b), uniform(a, b)]
#
#v3 = [uniform(a, b), 1.0+uniform(a, b), uniform(a, b)]
#
#v6 = [uniform(a, b), uniform(a, b), 1.0+uniform(a, b)]
#
#v4 = [1.0+uniform(a, b), 1.0+uniform(a, b), uniform(a, b)]
#
#v8 = [ 1.0 + uniform(a, b),uniform(a, b), 1.0+uniform(a, b)]


#v1 = [uniform(a, b), 1.0 + uniform(a, b), uniform(a, b)]
#v8 = [uniform(a, b), 1.0 + uniform(a, b), uniform(a, b)]

#v4 = [-1.0+uniform(a, b), uniform(a, b), uniform(a, b)]
#v2 = [-1.0+uniform(a, b), uniform(a, b), uniform(a, b)]

#v3 = [1.0+uniform(a, b), uniform(a, b), uniform(a, b)]
#v5 = [1.0+uniform(a, b), uniform(a, b), uniform(a, b)]

#v6 = [uniform(a, b), 0.5 + uniform(a, b), 1.0+uniform(a, b)]

#v7 = [uniform(a, b), 0.5 + uniform(a, b), -1.0+uniform(a, b)]

#def dist( u, v):
#    return float(np.sqrt( (u[0]-v[0])**2 + (u[1]-v[1])**2 + (u[2]-v[2])**2))
#
#lengths = {
#           (2, 1) : dist(v2,v1),
#            (2, 7) : dist(v2,v7),
#            (2, 6) : dist(v2,v6),
#            (3, 1) : dist(v3,v1),
#            (3, 7) : dist(v3,v7),
#            (3, 2) : dist(v3,v2),
#            (4, 1) : dist(v4,v1),
#            (4, 7) : dist(v4,v7),
#            (4, 3) : dist(v4,v3),
#            (5, 1) : dist(v5,v1),
#            (5, 7) : dist(v5,v7),
#            (5, 4) : dist(v5,v4),
#            (6, 1) : dist(v6,v1),
#            (6, 5) : dist(v6,v5),
#            (5, 8) : dist(v5,v8),
#            (6, 8) : dist(v6,v8),
#            (7, 8) : dist(v7,v8),
#            (2, 8) : dist(v2,v8),
#           }


lengths = {(2, 7): 1.4288466263977495, (4, 7): 17.88035095820198, (2, 6): 1.0237800945583875, (4, 5): 17.84874384133012, (2, 8): 1.0222718473388588,
           (1, 4): 18.149011451612797, (1, 3): 14.357024144718817, (1, 6): 3.032569805432945, (3, 7): 14.26976782945725, (5, 8): 0.09782324287506733,
           (1, 2): 3.214648729657953, (6, 8): 0.03813348403581635, (1, 5): 3.032338165266229, (3, 4): 22.24815495162433, (5, 7): 1.0123496857434562, 
           (5, 6): 0.09495461781471154, (2, 3): 13.512023838396058, (7, 8): 1.0091111235946963}
           
lengths = {(2, 7): 1.4288466263977495, (4, 7): 13.177186219752265, (2, 6): 1.0237800945584088, (4, 5): 13.095230370891187, (2, 8): 1.0222587379875785, 
           (1, 4): 13.365253277214508, (1, 3): 7.715718492411297, (1, 6): 3.032569805432938, (3, 7): 7.296845203770255, (5, 8): 0.09958757549720172, 
           (1, 2): 3.214648729657953, (6, 8): 0.03293162305363898, (1, 5): 3.032338165266229, (3, 4): 14.352417603885499, (5, 7): 1.0123496857434562, 
           (5, 6): 0.09495461781465638, (2, 3): 6.567028630020083, (7, 8): 0.9888906344533466}
           
lengths = {(2, 7): 1.4288466263977495, (4, 7): 4.842624306865316, (2, 6): 1.0238654856293545, (4, 5): 4.5546452094823247, (2, 8): 1.022390122314935, 
           (1, 4): 5.501616644087601, (1, 3): 8.51207449423649, (1, 6): 3.0275061849268776, (3, 7): 8.16277576913792, (5, 8): 0.09814257207967064, 
           (1, 2): 3.214648729657953, (6, 8): 0.033081652556535536, (1, 5): 3.032338165266229, (3, 4): 7.634708567878329, (5, 7): 1.0123496857434562, 
           (5, 6): 0.09499799392440313, (2, 3): 7.420903583333997, (7, 8): 0.9940938333563378}
           
           
lengths = {(2, 7): 1.4288466263977495, (4, 7): 3.646175820991137, (2, 6): 1.0238654856293283, (4, 5): 3.3429830998046732, (2, 8): 1.0229346087847153, 
           (1, 4): 4.49321454664234, (1, 3): 12.291475166368201, (1, 6): 3.027506184926906, (3, 7): 12.213160380343274, (5, 8): 0.09529692624044482, 
           (1, 2): 3.214648729657953, (6, 8): 0.0179005231972465, (1, 5): 3.032338165266229, (3, 4): 10.92113783226037, (5, 7): 1.0123496857434562, 
           (5, 6): 0.0949979939254927, (2, 3): 11.53333847125022, (7, 8): 1.0019027335371273}
G = GraphEmbedding(lengths, 'Max8vertices')
sols = G.findEmbeddings()
print '# real:'
print len(sols['real'])


#print len(sols['complex'])

   

#alg = AlgRealEmbeddings('Max8vertices', name='8vert')
#alg.findMoreEmbeddings(engths)










